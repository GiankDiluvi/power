args = list(mean = mu0, sd = sqrt(sigma2 / n)),
xlim = c(cv0, xmax),
geom = "area",
fill = "#D64B40FF") + # fill up type I error +
geom_text(aes(label = "alpha",
x = cv0 + sd0/4,
y = dnorm(cv0 + sd0/4, mean = mu0, sd = sd0)) + 0.1*ymax,
parse = TRUE) +           # add alpha label
geom_text(aes(label = as.character(t1e),
x = cv0 + sd0/4,
y = dnorm(cv0 + sd0/4, mean = mu0, sd = sd0)  + 0.1*ymax - 0.045),
parse = TRUE) +           # add alpha value
geom_text(aes(label = "Specificity",
x = mu0 - abs(cv0)  - sd0/4,
y = dnorm(cv0, mean = mu0, sd = sd0)),
parse = TRUE) +           # add specificity label
geom_text(aes(label = as.character(1 - t1e),
x = -cv0 * 1.3,
y = dnorm(cv0, mean = mu0, sd = sd0) - 0.045),
parse = TRUE) +           # add specificity value
geom_text(aes(label ="x^{'*'}",
x = cv0 - sd0/4,
y = ymax + 0.1),
parse = TRUE) +           # add critical value label
annotate(geom = "text",
label = as.character(expression(paste("="))),
x = cv0 - sd0/4 + sd0/6.5,
y = ymax + 0.089,
parse = TRUE) +           # add equal sign
geom_text(aes(label = as.character(round(cv0, 2)),
x = cv0 - sd0/4 + sd0/2,
y = ymax + 0.089),
parse = TRUE) +          # add critical value
labs(x = "",
y = "") +
xlim(c(xmin, xmax))
1.1-0.089
0.1-0.089
sd0
ymax
0.45/ymax
0.045/yma
0.045/ymax
ymax/0.045
power <- pnorm(cv0, mean = mu1, sd = sd0, lower.tail = FALSE)
mu1
show_col(viridis_pal()(20))
viridis_pal()(20)
show_col(viridis_pal(option = "inferno")(20))
viridis_pal(option = inferno)(20)
viridis_pal(option = "inferno")(20)
show_col(viridis_pal(option = "cividis")(20))
show_col(viridis_pal(option = "viridis")(20))
viridis_pal(option = "viridis")(20)
ggplot(tibble(x = c(xmin, xmax)), aes(x)) +
stat_function(fun = dnorm,
args = list(mean = mu1, sd = sd0)) + #adds normal plot
geom_segment(aes(x = cv0, y = 0,
xend = cv0, yend = 1.15*ymax1),
linetype="dashed",
size=0.25) + # adds line on critical value
stat_function(fun = dnorm,
args = list(mean = mu1, sd = sd0),
xlim = c(xmin, cv0),
geom = "area",
fill = "#238A8DFF") + # fill up  type II error
stat_function(fun = dnorm,
args = list(mean = mu1, sd = sd0),
xlim = c(cv0, xmax),
geom = "area",
fill = "#32648EFF") + # fill up power +
geom_text(aes(label = "Power",
x = cv0 + sd0/4,
y = dnorm(cv0 + sd0/4, mean = mu1, sd = sd0) + 0.15*ymax1),
parse = TRUE) +           # add power label
geom_text(aes(label = as.character(round(power, 2)),
x = cv0 + sd0/4,
y = dnorm(cv0 + sd0/4, mean = mu1, sd = sd0)  + 0.15*ymax1 - 0.06*ymax1),
parse = TRUE) +           # add power value
geom_text(aes(label = "beta",
x = cv0  - sd0/4,
y = dnorm(cv0  - sd0/4, mean = mu1, sd = sd0) + 0.1*ymax1),
parse = TRUE) +           # add t2e label
geom_text(aes(label = as.character(round(1 - power, 2)),
x = cv0 - sd0/4,
y = dnorm(cv0 - sd0/4, mean = mu1, sd = sd0) + 0.1*ymax1 - 0.04*ymax1),
parse = TRUE) +           # add t2e value
# geom_text(aes(label = as.character(round(cv0, 2)),
#               x = cv0,
#               y = 1.2*ymax1),
#           parse = TRUE) +          # add critical value
labs(x = "",
y = "") +
xlim(c(xmin, xmax))
viridis_pal(option = "viridis")(20)
show_col(viridis_pal(option = "viridis")(20))
mu0 <- 0
mu1 <- 1
sigma2 <- 1
n <- 10
t1e <- 0.05
power <- 0.8
# create params
sd0 <- sqrt(sigma2 / n)
cv0 <- qnorm(1-t1e, mean = mu0, sd = sd0)
power_fun <- function(n) pnorm(cv0, mean = mu1, sd = sd0, lower.tail = FALSE)
# determine biggest n
b_target <- max(power, 0.999)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
power_fun(1:10)
power_fun <- function(n) pnorm(cv0, mean = mu1, sd = sqrt(sigma2 / n), lower.tail = FALSE)
# determine biggest n
b_target <- max(power, 0.999)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
# determine solution
for(i in 1:nmax){
if(power_fun(i) > power) break
}
nstar <- i
# plot
power_plot <- ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25)
power_plot
mu1 <- 0.25
# create params
cv0 <- qnorm(1-t1e, mean = mu0, sd = sd0)
power_fun <- function(n) pnorm(cv0, mean = mu1, sd = sqrt(sigma2 / n), lower.tail = FALSE)
# determine biggest n
b_target <- max(power, 0.999)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
# determine solution
for(i in 1:nmax){
if(power_fun(i) > power) break
}
nstar <- i
power_fun(1:10)
mu0
mu1
sigma2
power
power_fun <- function(n) pnorm(cv0, mean = mu1, sd = sqrt(sigma2 / n), lower.tail = FALSE)
power_fun(1:10)
power_fun(1:20)
# create power function
power_fun <- function(n){
cv0 <- qnorm(1-t1e, mean = mu0, sd = sqrt(sigma2 / n))
pnorm(cv0, mean = mu1, sd = sqrt(sigma2 / n), lower.tail = FALSE)
}
# determine biggest n
b_target <- max(power, 0.999)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
# determine solution
for(i in 1:nmax){
if(power_fun(i) > power) break
}
nstar <- i
# plot
power_plot <- ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25)
power_plot
# determine biggest n
b_target <- max(power, 0.99)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
# determine solution
for(i in 1:nmax){
if(power_fun(i) > power) break
}
nstar <- i
# plot
power_plot <- ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25)
power_plot
# determine biggest n
b_target <- max(power, 0.999)
for(i in 1:1000){
if(power_fun(i) > b_target) break
}
nmax <- i
# determine solution
for(i in 1:nmax){
if(power_fun(i) > power) break
}
nstar <- i
nmax <- min(nmax, 2*nstar)
# plot
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25)
# plot
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) +
geom_text(aes(label = as.character(n),
x = nstar + nmax/50,
y = power,
parse = TRUE)
})
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) +
geom_text(aes(label = as.character(n),
x = nstar + nmax/50,
y = power,
parse = TRUE)
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) +
geom_text(aes(label = as.character(n),
x = nstar + nmax/50,
y = power),
parse = TRUE)
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) +
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/50,
y = power),
parse = TRUE)
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) +
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) +
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) +
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/50,
y = power - 0.05),
parse = TRUE)
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
geom_text(aes(label = "n^'*':",
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar label
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size", n)),
y = "Power / sensitivity")
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
geom_text(aes(label = "n^{'*'}:",
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar label
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size", n)),
y = "Power / sensitivity")
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
geom_text(aes(label = "x^{'*'}",
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar label
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size", n)),
y = "Power / sensitivity")
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
geom_text(aes(label = "x^{'*'}",
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar label
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/25,
y = power - 0.02),
parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size", n)),
y = "Power / sensitivity")
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
geom_text(aes(label = "n^{'*'}",
x = nstar + nmax/50,
y = power - 0.02),
parse = TRUE) + # add nstar label
geom_text(aes(label = as.character(nstar),
x = nstar + nmax/20,
y = power - 0.02),
parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity")
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
# geom_text(aes(label = "n^{'*'}",
#                x = nstar + nmax/50,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar label
# geom_text(aes(label = as.character(nstar),
#                x = nstar + nmax/20,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity",
title = paste0("Optimal sample size: ", nstar))
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
# geom_text(aes(label = "n^{'*'}",
#                x = nstar + nmax/50,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar label
# geom_text(aes(label = as.character(nstar),
#                x = nstar + nmax/20,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity",
title = expression(paste("Optimal sample size:", n^'*', nstar)))
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
# geom_text(aes(label = "n^{'*'}",
#                x = nstar + nmax/50,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar label
# geom_text(aes(label = as.character(nstar),
#                x = nstar + nmax/20,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity",
title = expression(paste("Optimal sample size:", n^'*', " = ", as.character(nstar))))
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
# geom_text(aes(label = "n^{'*'}",
#                x = nstar + nmax/50,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar label
# geom_text(aes(label = as.character(nstar),
#                x = nstar + nmax/20,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity",
title = expression(paste("Optimal sample size:", nstar)))
ggplot(tibble(n = 1:nmax, b = power_fun(1:nmax))) +
geom_line(aes(x = n, y = b)) + # power function
geom_segment(aes(x = nstar, xend = nstar,
y = 0, yend = power),
linetype="dashed",
size=0.25) + # nstar line
geom_segment(aes(x = 0, xend = nstar,
y = power, yend = power),
linetype="dashed",
size=0.25) + # power line
# geom_text(aes(label = "n^{'*'}",
#                x = nstar + nmax/50,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar label
# geom_text(aes(label = as.character(nstar),
#                x = nstar + nmax/20,
#                y = power - 0.02),
#            parse = TRUE) + # add nstar value
labs(x = expression(paste("Sample size ", n)),
y = "Power / sensitivity",
title = paste("Optimal sample size:", nstar))
?fillCol
